{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww27740\viewh14400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs36 \cf0 Approach\
\

\f1\b0 - Plots to show:\
	1. Splines\
	2. Maneuvers\
	3. Equation error both Lon and lat\
	4. Lon model validation plots\
	5. Lat model validation plots\
	6. Distributions of parameters
\f0\b \
\

\f1\b0  1. Data processing:\
	- Only use roll, pitch, yaw and v_N, v_E, v_D from PX4 EKF with dt = 0.02 s = 50 Hz.\
	- Calculate u, v, w from v_NED\
	- Smooth phi, theta, psi, u, v, w using a Savitsky-Golay filter of order 10 with framelength 51\
	- Approximate phi, theta, psi, u, v, w with piecewise splines (knots every 0.1 second)\
	- Calculate eul_dot, vel_dot using analytical differentiation of splines\
	- Calc p, q, r from kinematic relationship with eul and eul_dot\
	- Calc acc from kinematic relationship with vel_dot, eul, [p q r]\
	- Approximate p, q, r with splines\
	- Calculate p_dot, q_dot and r_dot analytically\
	- Calculate force coefficients using vel, acc and thrust input\
	- Calculate moment coefficients using [p q r], vel, [p_dot, q_dot, r_dot]\
	- Remove maneuvers with dropouts and disturbances\
	- Shuffle maneuvers\
	- Divide into 80% training and 20% validation for 211 roll (x 54), pitch (x 54) and yaw (x 36) maneuvers.\
2. Change model\
	- Model as c_X and c_Z instead of c_L and c_D. Hard to predict AoA and SSA correctly.\
	- Decide which expansion terms to use based on data, not theory.\
3. Equation-error\
	- Longitudinal model: Regressors are [u, w, q, delta_e]\
	- Lateral model: Regressors are [p, r, v, delta_a, delta_r]\
	- Use step-wise regression to select which regressors to use:		- Start with only bias term.\
		- Calculate most correlated regressor from pool of remaining regressors\
		- Calculate the partial F statistics to see if this actually helps (hypothesis testing with 95% confidence interval)\
		- Add regressor if it passes test\
		- Make regressor pool and dependent variable orthogonal to already used regressors (Basically removed everything from regressors and dependent variable that can be explained by already used regressors. The is done by calculating residue, and then predicting the used regressors with the unused regressors and use this to calculate new regressors without the part that can be predicted by already used predictors)\
		- Pick the regressor that has the highest correlation with dependent variable (based on orthogonalized dependent variable and regressors, i.e. only care about the part that is not yet predicted).\
		- See if regressor passes tests, and add it\
		- Backward step where regressors are removed (does not actually happen before it converges)\
		- Stop when no remaining regressors will increase R squared by more than 0.5%.\
	- Use chosen regressors and LSE to calculate coefficient values\
4. Output-error\
	- Cost function: Weight by inverted covariance to get maximum likelihood estimator\
	- Cost function: Weight states in the beginning more than in the end, as some drift could happen due to noise or other unmodelled effects.\
	- Start with Lon model with lat states fixed:\
		- Use initial guess from equation error\
		- For every Lon maneuver, calculate the optimal lon coefficients. Only let coefficients change by 60% (this is questionable and I will probably increase this).\
		- Pick the median of the coefficients for all maneuvers and use these\
	- Do the same with Lat model on lat data, only let lat coefficients change. Only weight lat states\
	- Let all coefficients be free, and change up to 15%. Calculate optimal coefficients for all 117 maneuvers (Lon and lat. Use median as coefficient values\
	- Possible to use median absolute deviation as a measure of the certainty in the maneuvers.\
	- Normal distributions (almost)\
	}